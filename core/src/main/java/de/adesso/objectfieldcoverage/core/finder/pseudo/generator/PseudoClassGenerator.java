package de.adesso.objectfieldcoverage.core.finder.pseudo.generator;

import spoon.reflect.declaration.CtClass;
import spoon.reflect.factory.ClassFactory;

/**
 * Functional interface abstraction to generate {@code public} pseudo classes for pseudo fields.
 */
@FunctionalInterface
public interface PseudoClassGenerator {

    /**
     * The suffix of a class containing pseudo fields generated by an implementation.
     */
    String PSEUDO_CLASS_SUFFIX = "___Pseudo";

    /**
     * <b>Note:</b> Implementations do not have to verify that a class with the same qualified name is already
     * present in the underlying model!
     *
     * @param factory
     *          The {@link ClassFactory} to create the {@link CtClass} with, not {@code null}.
     *
     * @param simpleClassName
     *          The simple class name of the class which should be generated, not blank.
     *          The {@link #PSEUDO_CLASS_SUFFIX} will be appended to this simple name.
     *
     * @param packageQualifiedName
     *          The qualified name of the package the {@link CtClass} should be declared in, not {@code null}. An empty
     *          String indicates the default package. Is not allowed to end with a dot.
     *
     * @return
     *          The generated {@link CtClass}.
     */
    CtClass<?> generatePseudoClass(ClassFactory factory, String simpleClassName, String packageQualifiedName);

}
